<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Luong Nguyen Thanh</title>
<link>https://jadeyryan.com/blog.html#category=R</link>
<atom:link href="https://jadeyryan.com/blog-r.xml" rel="self" type="application/rss+xml"/>
<description>R code, environmental data science, and cats.</description>
<generator>quarto-1.6.32</generator>
<lastBuildDate>Sat, 18 Nov 2023 23:00:00 GMT</lastBuildDate>
<item>
  <title>Intermediate guide to publish a Quarto website with GitHub &amp; Netlify</title>
  <dc:creator>Jadey Ryan</dc:creator>
  <link>https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/</link>
  <description><![CDATA[ <p>Thankfully, many amazing <a href="https://github.com/mcanouil/awesome-quarto">resources</a> for building beautiful websites and blogs with Quarto already exist. Instead of adding to that pool of content, I’ll demo how I built my website with Quarto, connected to a GitHub repository, and then deployed and published with Netlify <a href="https://docs.netlify.com/site-deploys/create-deploys/#deploy-with-git">continuous deployment</a>. Special thanks to <a href="https://libbyheeren.com">Libby Heeren</a> for testing this demo and helping me clarify some sticky points! ♥️</p>
<p>I struggled for hours trying to set up the configurations so my site would deploy every time I pushed a change to my GitHub repo. Hopefully this demo saves you some time when you start your own website! :)</p>
<p>As with most tech and dev stuff, there’s many ways to do (almost) the same thing. I’d love to hear how other people have their Quarto/Netlify workflows set up. Leave a comment at the end of the post, or reach out!</p>
<p>Anyhoo, keep on reading to learn about:</p>
<ul>
<li>options for publishing a Quarto website</li>
<li>creating a Quarto website as an RStudio project</li>
<li>connecting this project to a GitHub repository</li>
<li>initially publishing to Netlify using the Quarto command line interface (CLI)</li>
<li>setting up the configuration files for continuous deployment</li>
<li>using Netlify’s branch deploys and deploy previews</li>
<li>installing the <a href="https://github.com/netlify/netlify-plugin-lighthouse#readme">Lighthouse</a> plugin to audit your site’s performance, accessibility, best practices, and search engine optimization (SEO) at build time</li>
</ul>
<section id="why-netlify" class="level1 unnumbered"><h1 class="unnumbered">Why Netlify?</h1>
<p>There are lots of options for publishing Quarto websites:</p>
<ul>
<li><a href="https://quarto.org/docs/publishing/github-pages.html">GitHub Pages</a></li>
<li><a href="https://quarto.org/docs/publishing/quarto-pub#github-action">Quarto Pub</a></li>
<li><a href="https://quarto.org/docs/publishing/rstudio-connect.html">Posit Connect</a></li>
<li><a href="https://quarto.org/docs/publishing/confluence.html">Confluence</a></li>
<li><a href="https://quarto.org/docs/publishing/other.html#google-firebase">Firebase</a></li>
<li><a href="https://quarto.org/docs/publishing/other.html#site44">Site44</a></li>
<li><a href="https://quarto.org/docs/publishing/other.html#amazon-s3">Amazon S3</a></li>
<li>And of course, <a href="https://quarto.org/docs/publishing/netlify.html">Netlify</a>
</li>
</ul>
<p>Honestly, I was completely overwhelmed by all the options. I had to think about what was most important to me:</p>
<ol type="1">
<li>using my own custom domain</li>
<li>continuous integration so I could deploy from version control</li>
<li>easy configuration and maintenance</li>
</ol>
<p>I checked out what other #RStats bloggers<sup>1</sup> were using and found many folks used GitHub Pages or Netlify.</p>
<p>After some repo-diving and research, I decided to go with Netlify and their starter plan, shown below:</p>
<p><a href="img/netlify-starter.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-1"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-starter.webp" class="img-fluid" alt="Netlify starter stats for my account. Bandwidth is 745 MB/100 GB. Build minutes is 43/300. Concurrent builds is 0/1. Team members is 1." width="600"></a></p>
<p>I don’t think I’ll ever get near the <a href="https://www.netlify.com/pricing/">Netlify starter plan limits</a>, but who knows. If I exceed the limits, I pay as I go. Or, I can upgrade to $19/month for much higher limits.</p>
<p>A major selling point for Netlify is the free <a href="https://docs.netlify.com/site-deploys/overview/">deployment preview system</a>. We can use <strong>branch deploys</strong> to preview changes from a feature branch or <strong>deploy previews</strong> to see changes from pull requests and merges. These deployment previews don’t touch our site in production.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Differences between <strong>deploy</strong> and <strong>publish</strong>
</div>
</div>
<div class="callout-body-container callout-body">
<p>I was confused about the terminology of deploying and publishing a website. While they seem interchangeable, there are some subtle differences.</p>
<p><strong>Deploys</strong> push files to Netlify’s server and build the site. We can have multiple deploys with their own unique URLs that we use to preview changes. These represent our site at specific points in time and are useful for testing or staging.</p>
<p><strong>Publishing</strong> makes the deployed site publicly available at our main URL. This published site is what I’ll call our site in production, meaning it’s live and accessible to users.</p>
</div>
</div>
<p>A similar feature is under development for GitHub Pages, according to this <a href="https://github.com/orgs/community/discussions/7730">discussion on GitHub Community</a>.</p>
<p>Jump to the Branch deploys and deploy previews section for more details on the deployment preview system.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important Note about Continuous Integration (CI)
</div>
</div>
<div class="callout-body-container callout-body">
<p>Netlify servers can render markdown and build the website<sup>2</sup>, but cannot execute code<sup>3</sup>. This means all code must be executed locally on our computer and the output must be saved via the <a href="https://quarto.org/docs/projects/code-execution.html#freeze">Quarto freeze feature</a> AND committed to our repo.<sup>4</sup></p>
<p>To learn more about rendering Quarto documents and websites with CI, read this <a href="https://quarto.org/docs/publishing/ci.html#rendering-for-ci">article</a>. The article discusses a continuum that extends from running everything <strong>locally</strong> to running everything <strong>remotely</strong> on a CI server. The workflow presented in this post sits in the middle:</p>
<p><a href="img/ci-continuum.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-2"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/ci-continuum.webp" class="img-fluid" alt="Graphic of continuous integration continuum with double sided arrow. On the very left is Local Execution &amp; Rendering where the local machine runs code and renders the site and the C server checks the output is copied from version control to the right place. In the middle is Local Execution with CI Rendering where local machine runs code and saves output in the _freeze directory and the CI server with Quarto installed renders the site. The right is CI Execution and Rendering where the CI server executes all code and renders the site; Quarto and all code dependencies must be available on the CI server."></a></p>
</div>
</div>
</section><section id="the-complete-walk-through" class="level1 unnumbered"><h1 class="unnumbered">The complete walk-through</h1>
<p>If you’re still interested in creating a website with Quarto and publishing with Netlify, follow along to get started!</p>
</section><section id="create-a-quarto-website" class="level1" data-number="1"><h1 data-number="1">
<span class="header-section-number">1</span> Create a Quarto website</h1>
<p>In RStudio, go to <code>File</code> &gt; <code>New Project</code> &gt; <code>New Directory</code> to open the <strong>New Project Wizard</strong>.</p>
<p>Let’s start with a website. If you’d like to add a blog later on, <a href="https://samanthacsik.github.io/">Samantha Csik</a> wrote a great blog post explaining this process <span class="citation" data-cites="csik2022">(Csik 2022)</span>.</p>
<p><a href="img/rstudio-project-wizard.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-3"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/rstudio-project-wizard.webp" class="img-fluid" alt="New project wizard with box around Quarto Website." width="500"></a></p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Are you new to GitHub?
</div>
</div>
<div class="callout-body-container callout-body">
<p>I’m assuming you already use GitHub and connected it to RStudio. If you haven’t, please follow the installation instructions in <a href="https://happygitwithr.com/">Happy Git and GitHub for the useR</a> <span class="citation" data-cites="bryan2023">(Bryan and Hester 2023)</span> and then come back.</p>
</div>
</div>
<p>Choose the name of our directory (which will also be the name of our GitHub repository), check the <code>Create a git repository</code> box, then click <code>Create Project</code>.</p>
<p><a href="img/create-website.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-4"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/create-website.webp" class="img-fluid" alt="Create Quarto Website dialog box with a field for directory name and a checkbox selected to create a git repository." width="500"></a></p>
<p>We should now be in a RStudio project that has <code>index.qmd</code> and <code>_quarto.yml</code> open and some new things in our <code>Files pane</code>:</p>
<p><a href="img/rstudio-website.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-5"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/rstudio-website.webp" class="img-fluid" alt="RStudio with index.qmd and _quarto.yml open and many new folders and files in the files pane." width="500"></a></p>
<p>Our <code>Files pane</code> should have the following:</p>
<pre><code>├── _quarto.yml         # Website configuration file
├── about.qmd           # About page
├── index.qmd           # Landing page
├── my-website.Rproj    # RStudio project config file
└── styles.css          # CSS file for any custom styling</code></pre>
<p>Notice we also have a <code>Git pane</code> with all of these files unstaged and no branches available. This is because we haven’t created a repository on GitHub and connected it with this project yet.</p>
<p><a href="img/git-pane.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-6"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/git-pane.webp" class="img-fluid" alt="RStudio Git pane with a box around (no branch)." width="500"></a></p>
</section><section id="create-and-connect-to-github" class="level1" data-number="2"><h1 data-number="2">
<span class="header-section-number">2</span> Create and connect to GitHub</h1>
<p>If you’re following along with <a href="https://happygitwithr.com/">Happy Git and GitHub for the useR</a> <span class="citation" data-cites="bryan2023">(Bryan and Hester 2023)</span>, we’re using the <a href="https://happygitwithr.com/existing-github-last"><code>Existing project, GitHub last</code></a> workflow.</p>
<p>Thankfully, we can use the <code>usethis</code> package so we don’t have to touch the terminal (yet)! If you haven’t used <code>usethis</code> yet, you’ll need to do the setup described in the <a href="https://usethis.r-lib.org/articles/usethis-setup.html#install-git">package documentation</a>.</p>
<p>Assuming we’ve connected and authenticated our GitHub account in RStudio, we use just two lines of code to create and connect a repository️ to our project 🧙🏼‍♀️.</p>
<div class="cell">
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">usethis</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://usethis.r-lib.org/reference/use_git.html">use_git</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ✔ Setting active project to '/Users/jadeyryan/Library/CloudStorage/Dropbox/Mac/Documents/my-website'</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ✔ Adding '.Rhistory', '.Rdata', '.httr-oauth', '.DS_Store', '.quarto' to '.gitignore'</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># There are 6 uncommitted files:</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># * '_quarto.yml'</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># * '.gitignore'</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># * 'about.qmd'</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># * 'index.qmd'</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># * 'my-website.Rproj'</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># * 'styles.css'</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Is it ok to commit them?</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 1: Negative</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2: Nope</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 3: Yeah</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Selection: 3</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ✔ Adding files</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ✔ Making a commit with message 'Initial commit'</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">usethis</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;"><a href="https://usethis.r-lib.org/reference/use_github.html">use_github</a></span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">(</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">)</span></span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="downlit sourceCode r code-with-copy"><code class="sourceCode R"><span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ℹ Defaulting to 'https' Git protocol</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ✔ Creating GitHub repository 'jadeynryan/my-website'</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ✔ Setting remote 'origin' to 'https://github.com/jadeynryan/my-website.git'</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ✔ Pushing 'main' branch to GitHub and setting 'origin/main' as upstream branch</span></span>
<span><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ✔ Opening URL 'https://github.com/jadeynryan/my-website'</span></span></code></pre></div>
</div>
<p>Our new GitHub repository should open in our browser.</p>
</section><section id="connect-and-publish-to-netlify" class="level1" data-number="3"><h1 data-number="3">
<span class="header-section-number">3</span> Connect and publish to Netlify</h1>
<p>In order to use Netlify’s continuous deployment, we need to connect our Git provider to our Netlify account. If you don’t have a Netlify account yet, you can <a href="https://app.netlify.com/signup">sign up</a> with GitHub.</p>
<p><a href="img/netlify-signup.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-7"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-signup.webp" class="img-fluid" alt="Netlify signup page with GitHub login." width="400"></a></p>
<p>Once we’re logged into Netlify and connected to our GitHub, we can do the initial publishing with the Quarto CLI. In the terminal, run:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode" id="cb6" data-filename="Terminal" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">quarto</span> publish netlify</span></code></pre></div>
</div>
<p>If you’re not already logged in to Netlify on your browser, there may be an additional authentication step.</p>
<p><a href="img/quarto-publish-netlify.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-8"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/quarto-publish-netlify.webp" class="img-fluid" alt="quarto publish netlify command run in the RStudio terminal."></a></p>
<p>This command rendered our site locally, uploaded all the static files to Netlify, and then deployed and published our new site! The site overview on Netlify should have opened in our browser:</p>
<p><a href="img/netlify-site-overview.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-9"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-site-overview.webp" class="img-fluid" alt="Site overview on Netlify with boxes around the random subdomain name and the status as a manual deploy." width="400"></a></p>
<p>Netlify provided a random site name (<strong><code>stately-chimera-0c91c7</code></strong>) on the <code>netlify.app</code> domain. Also, notice that it says <code>Manual deploys</code> underneath the site link, meaning it was deployed from the <code>quarto publish netlify</code> command in our terminal and not from GitHub.</p>
<p>Click on that link to open our live site!</p>
<p><a href="img/live-website.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-10"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/live-website.webp" class="img-fluid" alt="Screenshot of live website at stately-chimera-0c91c7.netlify.app."></a></p>
<section id="site-domain-name" class="level2" data-number="3.1"><h2 data-number="3.1" class="anchored" data-anchor-id="site-domain-name">
<span class="header-section-number">3.1</span> Site domain name</h2>
<p>The domain name is the URL or web address to our site. We have two options to rename our site:</p>
<ul>
<li>
<strong>Free</strong>: change the random name provided but keep the <code>netlify.app</code> domain.</li>
<li>
<strong>Purchase a new domain</strong>: I recommend buying it directly on Netlify so they handle all the <a href="https://ns1.com/products/dedicated-dns">DNS</a> configurations. Or, buy from a domain provider that doesn’t use the NS1 DNS zone, or you might go through the nightmare of switching DNS zones.<sup>5</sup>
</li>
</ul>
<section id="free-domain-name-change" class="level3"><h3 class="anchored" data-anchor-id="free-domain-name-change">Free domain name change</h3>
<p>Let’s walk through the free option first.</p>
<p>From the site overview Netlify page, click on <code>Site configuration</code>.</p>
<p><a href="img/netlify-site-config.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-11"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-site-config.webp" class="img-fluid" alt="Netlify website site overview with box around site configuration." width="400"></a></p>
<p>Scroll down to <code>Site information</code>, and then click on <code>Change site name</code>.</p>
<p><a href="img/netlify-site-info.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-12"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-site-info.webp" class="img-fluid" alt="Site information page on Netlify with button to change site name." width="400"></a></p>
<p>Now we can update the site name and click <code>Save</code>:</p>
<p><a href="img/netlify-change-site-name.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-13"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-change-site-name.webp" class="img-fluid" alt="Netlify change site name dialog box with new name of my-website24.netlify.app."></a></p>
<p>Note our site name is just the prefix to the full URL containing <code>netlify.app</code>.</p>
</section><section id="buy-a-domain-name" class="level3"><h3 class="anchored" data-anchor-id="buy-a-domain-name">Buy a domain name</h3>
<p>If you don’t want the <code>netlify.app</code> domain, you can purchase your own. Instead of <code>Site configuration</code>, go to <code>Domain management</code>, and then click <code>Add a domain</code>.</p>
<p><a href="img/netlify-domain-mgmt.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-14"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-domain-mgmt.webp" class="img-fluid" alt="Domain management part of Netlify site with option to add a domain."></a></p>
<p>Type in whatever custom domain we want. There are a bajillion different extensions – <a href="https://www.domain.com/domains/new-domain-extensions">domain.com</a> lists them alphabetically and has a helpful FAQ about domain extensions. <code>my-website24.com</code> is available for $13.99 for the first year.</p>
<p><a href="img/netlify-add-custom-domain.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-15"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-add-custom-domain.webp" class="img-fluid" alt="Add a custom domain to your site page on netlify. It says my-website24.com is available and costs $13.99 for the first year." width="500"></a></p>
</section></section><section id="new-_publish.yml-file" class="level2" data-number="3.2"><h2 data-number="3.2" class="anchored" data-anchor-id="new-_publish.yml-file">
<span class="header-section-number">3.2</span> New <code>_publish.yml</code> file</h2>
<p>Now that we’re set up with Netlify and GitHub, let’s head back to RStudio. Notice this new file <code>_publish.yml</code> appeared in the project directory when we used the <code>quarto publish netlify</code> command:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>_publish.yml</strong></pre>
</div>
<div class="sourceCode" id="cb7" data-filename="_publish.yml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> project</span></span>
<span id="cb7-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">netlify</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb7-3"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">    </span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">-</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">id</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> b9f73a69-06e7-4de2-9c7b-4f9855b56ba3</span></span>
<span id="cb7-4"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">      </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">url</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> </span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'https://stately-chimera-0c91c7.netlify.app'</span></span></code></pre></div>
</div>
<p>The Netlify site ID and original random URL were automatically filled in.</p>
<p>The next time we manually publish from the terminal, it will ask if we want to publish the update to <code>https://my-website24.netlify.app</code>. If we enter <code>y</code>, it will update the <code>url</code> value in the <code>_publish.yml</code> file.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Terminal</strong></pre>
</div>
<div class="sourceCode" id="cb8" data-filename="Terminal" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">base</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">MacBook-Pro-4:my-website</span> jadeyryan$ quarto publish netlify</span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">?</span> Publish update to: › https://stately-chimera-0c91c7.netlify.app <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Netlify</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> jadey.nicole.ryan@gmail.com<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rendering</span> for publish:</span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[1/2]</span> index.qmd</span>
<span id="cb8-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[2/2]</span> about.qmd</span>
<span id="cb8-7"></span>
<span id="cb8-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[✓]</span> Preparing to publish site</span>
<span id="cb8-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[✓]</span> Uploading files <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">complete</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[✓]</span> Deploying published site</span>
<span id="cb8-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[✓]</span> Published site: https://stately-chimera-0c91c7.netlify.app</span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">base</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span> <span class="ex" style="color: null;
background-color: null;
font-style: inherit;">MacBook-Pro-4:my-website</span> jadeyryan$ quarto publish netlify</span>
<span id="cb8-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">?</span> Publish update to: › https://my-website24.netlify.app <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Netlify</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-</span> jadey.nicole.ryan@gmail.com<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">Rendering</span> for publish:</span>
<span id="cb8-16"></span>
<span id="cb8-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[1/2]</span> index.qmd</span>
<span id="cb8-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[2/2]</span> about.qmd</span>
<span id="cb8-19"></span>
<span id="cb8-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[✓]</span> Preparing to publish site</span>
<span id="cb8-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[✓]</span> Uploading files <span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">complete</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span>
<span id="cb8-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[✓]</span> Deploying published site</span>
<span id="cb8-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">[✓]</span> Published site: https://my-website24.netlify.app</span></code></pre></div>
</div>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you continue to the next steps for configuring continuous deployment, this should be your last time manually publishing your site with <code>quarto publish netlify</code> in the terminal.</p>
<p>When adding code content, you should still run <code>quarto render</code> in the terminal to update the <code>_freeze</code> directory. Though, it’s good practice to always render before pushing to GitHub.</p>
</div>
</div>
</section></section><section id="configure-continuous-deployment" class="level1" data-number="4"><h1 data-number="4">
<span class="header-section-number">4</span> Configure continuous deployment</h1>
<p>Now we need to configure several things so Netlify can automatically deploy and publish our site:</p>
<ul>
<li>Add Quarto Netlify plugin files</li>
<li>Freeze code output by setting <code>freeze: auto</code> in <code>_quarto.yml</code>
</li>
<li>Ignore output directory by adding the <code>_site</code> directory to <code>.gitignore</code>
</li>
<li>Link Netlify site to GitHub repository<sup>6</sup>
</li>
</ul>
<section id="configure-netlify-plugin" class="level2" data-number="4.1"><h2 data-number="4.1" class="anchored" data-anchor-id="configure-netlify-plugin">
<span class="header-section-number">4.1</span> Configure Netlify plugin</h2>
<p>The <a href="https://github.com/quarto-dev/netlify-plugin-quarto">Quarto Netlify plugin</a> installs Quarto on the Netlify build server, allowing Netlify to build our Quarto website.</p>
<p>Let’s create the <code>netlify.toml</code> and <code>package.json</code> files in our RStudio project and copy/paste the below content into these files.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>netlify.toml</strong></pre>
</div>
<div class="sourceCode" id="cb9" data-filename="netlify.toml" style="background: #f1f3f5;"><pre class="sourceCode toml code-with-copy"><code class="sourceCode toml"><span id="cb9-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[[plugins]]</span></span>
<span id="cb9-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">package</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"@quarto/netlify-plugin-quarto"</span></span></code></pre></div>
</div>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>package.json</strong></pre>
</div>
<div class="sourceCode" id="cb10" data-filename="package.json" style="background: #f1f3f5;"><pre class="sourceCode json code-with-copy"><code class="sourceCode json"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-2">  <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"dependencies"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">{</span></span>
<span id="cb10-3">    <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">"@quarto/netlify-plugin-quarto"</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">:</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"^0.0.5"</span></span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span>
<span id="cb10-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">}</span></span></code></pre></div>
</div>
</section><section id="freeze-computations" class="level2" data-number="4.2"><h2 data-number="4.2" class="anchored" data-anchor-id="freeze-computations">
<span class="header-section-number">4.2</span> Freeze computations</h2>
<p>We need to <a href="https://quarto.org/docs/projects/code-execution.html#freeze">freeze</a> computations so code only runs locally. When we render a <code>.qmd</code> that executes code on our local machine, the results get saved in a <code>html.json</code> file within the <code>_freeze</code> directory. This means that the CI server has access to the code output and doesn’t need to execute any of the code.</p>
<p>The <code>_freeze</code> directory and all its files must be committed to our repo. Otherwise, the build will fail because Netlify doesn’t have the code output and can’t execute code without R installed. See the detailed error in my <a href="https://github.com/quarto-dev/quarto-cli/issues/1956#issuecomment-1773958407">comment on a GitHub issue</a>.</p>
<p>To automatically freeze all computations, add these two lines to our <code>_quarto.yml</code> file:</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>_quarto.yml</strong></pre>
</div>
<div class="sourceCode" id="cb11" data-filename="_quarto.yml" style="background: #f1f3f5;"><pre class="sourceCode yaml code-with-copy"><code class="sourceCode yaml"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">execute</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span></span>
<span id="cb11-2"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">  </span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">freeze</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">:</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;"> auto</span></span></code></pre></div>
</div>
<p>Setting <code>freeze: auto</code> tells Quarto to only re-render code when the source changes.</p>
<p>If you need to execute code within a CI service, see the <a href="https://quarto.org/docs/projects/code-execution.html#freeze">Quarto docs</a> for example GitHub Actions that install Quarto, R, and all dependencies.</p>
</section><section id="ignore-output-directory" class="level2" data-number="4.3"><h2 data-number="4.3" class="anchored" data-anchor-id="ignore-output-directory">
<span class="header-section-number">4.3</span> Ignore output directory</h2>
<p>Because we want Netlify bots to use continuous deployment to build our site, we need to ignore our output directory. To do this, we add the <code>_site</code> directory that contains all the rendered website content to our <code>.gitignore</code> file. This is recommended in the <a href="https://quarto.org/docs/publishing/netlify.html#ignoring-output-1">Quarto docs</a> to avoid super messy diffs and potential merge conflicts.</p>
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>.gitignore</strong></pre>
</div>
<div class="sourceCode" id="cb12" data-filename=".gitignore" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/_site/</span></span></code></pre></div>
</div>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you’re not following the workflow in this blog post and instead are using the <code>Local Execution &amp; Rendering</code> option of the CI continuum described in the <a href="https://quarto.org/docs/publishing/ci.html#rendering-for-ci">Quarto docs</a>, do not add <code>_site</code> to your <code>.gitignore</code>. You need this directory checked into version control so Netlify can access this content to publish your website.</p>
</div>
</div>
</section><section id="link-netlify-site-to-github-repository" class="level2" data-number="4.4"><h2 data-number="4.4" class="anchored" data-anchor-id="link-netlify-site-to-github-repository">
<span class="header-section-number">4.4</span> Link Netlify site to GitHub repository</h2>
<p>We already connected our Netlify and GitHub accounts, but now we need to tell Netlify which GitHub repo provides the source code for our website.</p>
<p>On Netlify, go to <code>Site configuration</code> &gt; <code>Build &amp; deploy</code> &gt; <code>Continous deployment</code> &gt; <code>Link repository</code>.</p>
<p><a href="img/netlify-link-repo.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-16"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-link-repo.webp" class="img-fluid" alt="Netlify site on the continuous deployment page with a box around the link repository button." width="700"></a></p>
<p>Choose <code>Deploy with GitHub</code>:</p>
<p><a href="img/netlify-connect-git.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-17"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-connect-git.webp" class="img-fluid" alt="Netlify site to connect to Git provider. Options to link site to Git repository for GitHub, GitLab, Bitbucket, and Azure DevOps." width="500"></a></p>
<p>If you’re already logged into GitHub, it should immediately authorize and allow you to select which repositories the Netlify app can access.</p>
<p>If this is your first time deploying with Netlify and GitHub, you’ll likely need to click the bottom link <code>Configure the Netlify app on GitHub</code>. This should open a new window where you can make sure the Netlify app is installed on your GitHub and select which repositories it can access.</p>
<p><a href="img/netlify-select-repos.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-18"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-select-repos.webp" class="img-fluid" alt="Netlify website Link your site to a Git Repository with box around 'Can't see your repo here? Configure the Netlify app on GitHub' link and arrow pointing to a new popup window that allows you to select which repositories Netlify can access."></a></p>
<p>After selecting the correct repository, configure the build settings on the next screen. Enter <code>_site</code> in the <code>Publish directory</code> field:</p>
<p><a href="img/netlify-build-settings.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-19"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-build-settings.webp" class="img-fluid" alt="Netlify site configuration build settings. All settings are blank except the Publish directory should be set to _site." width="500"></a></p>
<p>Then click <code>Deploy my-website24</code>, which take us back to our site overview page where it now says <code>Deploys from GitHub</code> instead of <code>Manual deploys</code>.</p>
<p><a href="img/netlify-deploys-gh.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-20"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-deploys-gh.webp" class="img-fluid" alt="Netlify site overview with website URL and text 'Deploys from GitHub'." width="400"></a></p>
</section><section id="push-a-change-to-our-repo" class="level2" data-number="4.5"><h2 data-number="4.5" class="anchored" data-anchor-id="push-a-change-to-our-repo">
<span class="header-section-number">4.5</span> Push a change to our repo</h2>
<p>Let’s push a change to our repo and make sure it automatically redeploys and republishes our website!</p>
<p>Add some content to <code>about.qmd</code>, run <code>quarto render</code> in the terminal, and then push to <code>main</code>.</p>
<p><a href="img/github-push-change.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-21"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/github-push-change.webp" class="img-fluid" alt="GitHub repository with recent commit 0b8b526."></a></p>
<p>The <code>Deploys</code> page on Netlify tells us that we successfully published from <code>main@0b8b526</code>.</p>
<p><a href="img/netlify-published.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-22"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-published.webp" class="img-fluid" alt="Netlify site Deploys page that shows main@0b8b526 was successfully published."></a></p>
<section id="auto-publishing" class="level3"><h3 class="anchored" data-anchor-id="auto-publishing">Auto publishing</h3>
<p>By default, <code>auto publishing</code> is turned on in the Netlify deploy settings. This means all successful deployments are automatically published to the public site.</p>
<p>Optionally, you can turn this setting off so that you have to click <code>Publish</code> to send the deployment to production. If you do want to turn it off, go to <code>Deploys</code> &gt; and then click <code>Lock to stop auto publishing</code>.</p>
<p><a href="img/netlify-auto-publishing.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-23"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-auto-publishing.webp" class="img-fluid" alt="Netlify site Deploys page with box around button to Lock to stop auto publishing."></a></p>
<p>The site will still deploy every time you push changes to your repo, but you need to click a button to actually publish this latest deployment. This is a good option if you don’t want to work in new branches or use pull requests/merges, but still want to preview your site before sending it to production.</p>
<p>For my personal website, I don’t have this turned off so that the site will automatically publish anytime I push to GitHub. Otherwise I might forget to click <code>Publish</code> and wonder where my changes are 😅.</p>
<p>Netlify docs provide more detail about <a href="https://docs.netlify.com/site-deploys/manage-deploys/#lock-a-published-deploy">auto publishing</a>.</p>
</section></section></section><section id="branch-deploys-and-deploy-previews" class="level1" data-number="5"><h1 data-number="5">
<span class="header-section-number">5</span> Branch deploys and deploy previews</h1>
<p>As we work on our website styling, content, and features, we probably want to preview our changes without messing up our live site. This is where the Netlify deploy preview system comes into play!</p>
<p>The table below (adapted from <a href="https://docs.netlify.com/site-deploys/overview/">Netlify docs</a>) provides a quick comparison of the differences between branch deploys and deploy previews.</p>
<table class="caption-top table">
<colgroup>
<col style="width: 10%">
<col style="width: 45%">
<col style="width: 45%">
</colgroup>
<thead><tr class="header">
<th></th>
<th>Branch deploys</th>
<th>Deploy previews</th>
</tr></thead>
<tbody>
<tr class="odd">
<td><strong>Default setup</strong></td>
<td>Must setup on Netlify website<sup>7</sup>
</td>
<td>No setup needed</td>
</tr>
<tr class="even">
<td><strong>URL</strong></td>
<td>
<p>&lt;<code>branch-name</code>&gt;–&lt;<code>website</code>&gt;.netlify.app</p>
<p>ex. https://<code>staging</code>–<code>my-website24</code>.netlify.app/</p>
</td>
<td>
<p>deploy-preview-&lt;<code>PR#</code>&gt;–&lt;<code>website</code>&gt;.netlify.app</p>
<p>ex. https://deploy-preview-<code>1</code>–<code>my-website24</code>.netlify.app/</p>
</td>
</tr>
<tr class="odd">
<td><strong>Access</strong></td>
<td>Deploys section on Netlify</td>
<td>Deploys section on Netlify or Netlify bot comment on GitHub pull/merge request</td>
</tr>
<tr class="even">
<td><strong>Scope</strong></td>
<td>Changes from feature branch</td>
<td>Changes from pull/merge request</td>
</tr>
</tbody>
</table>
<section id="branch-deploys" class="level2" data-number="5.1"><h2 data-number="5.1" class="anchored" data-anchor-id="branch-deploys">
<span class="header-section-number">5.1</span> Branch deploys</h2>
<p>Branch deploys are great if you typically use feature branches in your workflow.</p>
<p>By default, only the production branch (typically <code>main</code>) is automatically deployed by Netlify.</p>
<p>To enable branch deploys on other branches, we need to change the branch deploy setting. On the Netlify website &gt; <code>Site Configuration</code> &gt; <code>Build &amp; deploy</code> &gt; <code>Continuous deployment</code> &gt; <code>Branches and deploy contexts</code> &gt; <code>Branch deploys</code> &gt; <code>Configure</code> &gt; select the <code>All</code> radio button &gt; and then click <code>Save</code>.</p>
<p><a href="img/netlify-branch-deploy-context.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-24"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-branch-deploy-context.webp" class="img-fluid" alt="Netlify site configuration webpage with the branches and deploy contexts settings open. Branch deploys is set to All instead of None."></a></p>
<p>Or, if we only want to deploy previews for a specific branch, select <code>Let me add individual branches</code> and then enter the name of that branch.</p>
<p>Let’s try it out by creating a new branch called <code>staging</code> and pushing a commit to it.</p>
<p>On the Netlify <code>Deploys</code> page, we see our live site is still published from <code>main</code>, but we now have a <code>Branch deploy</code> from the <code>staging</code> branch that we can click to preview.</p>
<p><a href="img/netlify-branch-deploy.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-25"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-branch-deploy.webp" class="img-fluid" alt="Netlify deploys webpage for demo site highlighting the published site is deployed from the main production branch. Lower on the screen is the branch deploy which shows it was deployed from the staging branch."></a></p>
<p>Once we merge our <code>staging</code> branch into <code>main</code>, those changes will be published to our site in production.</p>
</section><section id="deploy-previews" class="level2" data-number="5.2"><h2 data-number="5.2" class="anchored" data-anchor-id="deploy-previews">
<span class="header-section-number">5.2</span> Deploy previews</h2>
<p>Deploy previews are enabled by default once our Netlify site is linked with our GitHub repository. Every time we make a pull request or merge, Netlify will deploy our site and then provide the links to the deploy information as a comment in the pull request/merge conversation on GitHub.</p>
<p>From our GitHub repository, create a pull request to merge our <code>staging</code> branch into <code>main</code>.</p>
<p>This triggers Netlify to deploy the site and then comment all the information for the deploy preview including a link to the commit, the deploy log, preview link, and a QR code to preview on a mobile device.</p>
<p><a href="img/netlify-bot.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-26"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-bot.webp" class="img-fluid" alt="GitHub merge request. Netlify bot commented a table with links to the latest commit, latest deploy log, deploy preview, and preview on mobile QR code."></a></p>
<p>We can also access our deploy preview from the Netlify <code>Deploys</code> page. Similar to the branch deploy, our live site is still published from <code>main,</code> but we now have <code>Deploy Preview #2</code> from <code>staging</code>. The #2 just means this was the second pull/merge request in our repository.</p>
<p><a href="img/netlify-deploy-preview.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-27"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-deploy-preview.webp" class="img-fluid" alt="Netlify deploys webpage for demo site highlighting the published site is deployed from the main production branch. Lower on the screen is the deploy preview which shows it was deployed from Pull Request #2."></a></p>
<p>Once we complete our pull request and merge to <code>main</code>, those changes will be published to our site in production.</p>
</section></section><section id="lighthouse-plugin" class="level1" data-number="6"><h1 data-number="6">
<span class="header-section-number">6</span> Lighthouse plugin</h1>
<p>Another benefit of Netlify are the integrations with different web tools. The only one I’m using so far is the <a href="https://developer.chrome.com/docs/lighthouse/overview/">Google Lighthouse tool</a>, which helps me abide by my <a href="https://jadeynryan.com/accessibility">accessibility commitment</a>.</p>
<p>Once installed, the <a href="https://github.com/netlify/netlify-plugin-lighthouse#readme">Lighthouse plugin</a> audits our site for performance, accessibility, best practices, and SEO at build time. The Lighthouse report gives us scores for each of these four categories.</p>
<p>To enable the plugin, on Netlify &gt; go to <code>Integrations</code> &gt; search for lighthouse &gt; then click <code>Enable</code>.</p>
<p><a href="img/netlify-lighthouse.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-28"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-lighthouse.webp" class="img-fluid" alt="Netlify integrations page searching for lighthouse with box highlighting the Enable button for the Lighthouse plugin."></a></p>
<p>Netlify will then ask if we’re sure we want to install Lighthouse on our website.</p>
<p>If we click <code>Install</code>, the Lighthouse audit will run the next time we deploy our site.</p>
<section id="lighthouse-report-on-netlify" class="level3"><h3 class="anchored" data-anchor-id="lighthouse-report-on-netlify">Lighthouse report on Netlify</h3>
<p>Regardless of whether we push directly to <code>main</code> or use the deployment preview system, we can always see the Lighthouse scores on the Netlify deploys page.</p>
<p><a href="img/netlify-lighthouse-report.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-29"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/netlify-lighthouse-report.webp" class="img-fluid" alt="Netlify deploys page with box around Lighthouse scores for performance (score of 96), accessibility (score of 86), best practices (score of 100), and SEO (score of 82)."></a></p>
</section><section id="lighthouse-report-on-github" class="level3"><h3 class="anchored" data-anchor-id="lighthouse-report-on-github">Lighthouse report on GitHub</h3>
<p>If we have a pull or merge request open, the Netlify bot will include the Lighthouse scores in its deploy preview comment.</p>
<p><a href="img/github-lighthouse-report.webp" class="lightbox" data-gallery="quarto-lightbox-gallery-30"><img src="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/img/github-lighthouse-report.webp" class="img-fluid" alt="GitHub pull request conversation with netlify bot comment that was edited with the latest commit, deploy log, preview URL, and Lighthouse audit."></a></p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>You can also <a href="https://developer.chrome.com/docs/lighthouse/overview/#devtools">manually run</a> a Lighthouse report in Chrome DevTools. But that takes away from the magic of the automated audit everytime you deploy your site with Netlify 😉.</p>
</div>
</div>
</section></section><section id="workflow" class="level1 unnumbered"><h1 class="unnumbered">Workflow</h1>
<p>My general workflow for editing my website is:</p>
<ol type="1">
<li><p>Add, edit, or remove content.</p></li>
<li><p>Run <code>quarto preview</code> in the terminal and work iteratively.</p></li>
<li><p>Use <code>Command</code>+<code>Shift</code>+<code>C</code> on Mac or <code>Control</code>+<code>Shift</code>+<code>C</code> on Windows to open Chrome DevTools and then <code>Command</code>+<code>Shift</code>+<code>M</code> on Mac or <code>Control</code>+<code>Shift</code>+<code>M</code> on Windows to toggle <a href="https://developer.chrome.com/docs/devtools/device-mode/">device mode</a> for testing the webpage responsiveness on mobile.</p></li>
<li><p>When happy with the changes, run <code>quarto render</code> in the terminal.</p></li>
<li><p>Push changes to GitHub (usually in a new branch).</p></li>
<li><p>Preview changes on different devices because I don’t fully trust Chrome DevTools device mode!</p></li>
<li><p>Edit based on Lighthouse audit scores.</p></li>
<li><p>Rinse and repeat!</p></li>
</ol></section><section id="wrap-up" class="level1 unnumbered"><h1 class="unnumbered">Wrap up</h1>
<p>I hope you found this post helpful for getting your Quarto website configured with Netlify, GitHub, and continuous deployment!</p>
<p>Since this is my first blog post, I’d love feedback on the style, flow, helpfulness, content, etc. Now that I’ve experienced the massive amount of time and head space writing a blog post can take, I have an even deeper appreciation for all the bloggers out there! Thank you!</p>
</section><section id="references" class="level1 unnumbered">



</section><div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-bryan2023" class="csl-entry">
Bryan, Jennifer, and Jim Hester. 2023. <em>Let<span>’</span>s Git Started | Happy Git and GitHub for the useR</em>. <a href="https://happygitwithr.com/">https://happygitwithr.com/</a>.
</div>
<div id="ref-csik2022" class="csl-entry">
Csik, Samantha. 2022. <span>“Adding a Blog to Your Existing <span>Quarto</span> Website.”</span> October 24, 2022. <a href="https://samanthacsik.github.io/posts/2022-10-24-quarto-blogs/">https://samanthacsik.github.io/posts/2022-10-24-quarto-blogs/</a>.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>
<ol>
<li id="fn1"><p>See my <a href="https://github.com/stars/jadeynryan/lists/blogs">GitHub stars list</a> for my favorite blogs or Quarto website resources.↩︎</p></li>
<li id="fn2"><p>As long we Configure Netlify plugin.↩︎</p></li>
<li id="fn3"><p>Unless we have a <a href="https://quarto.org/docs/publishing/netlify.html#executing-code">GitHub Action</a> install R and package dependencies.↩︎</p></li>
<li id="fn4"><p><a href="https://github.com/quarto-dev/quarto-cli/issues/1956#issuecomment-1773958407">Check out my GitHub issue comment</a> to see what happens if we don’t have <code>freeze</code> set to <code>auto</code> or <code>true</code> AND commit the freeze outputs.↩︎</p></li>
<li id="fn5"><p>I originally bought a domain from Square Space and could not set my Netlify site to that domain due to DNS issues that I don’t fully understand. When trying to add a domain, Netlify gave this error message: <code>A DNS zone for this domain already exists on NS1, the DNS provider backing Netlify DNS. Please contact NS1 with the domain name for support</code>. Here’s a <a href="https://answers.netlify.com/t/trying-to-move-domain-from-squarespace-to-netlify/11879">support forum thread</a> on Netlify with the instructions for pointing a custom domain to a Netlify site. I ended up buying another domain directly from Netlify… DNS stuff is too confusing! 😵‍💫↩︎</p></li>
<li id="fn6"><p>We’ve already connected our GitHub account to our Netlify in Create and connect to GitHub and Connect and publish to Netlify, but we still need to pick which repository our Netlify site links to.↩︎</p></li>
<li id="fn7"><p>Set up branch deploys by going to Netlify.com &gt; [<code>Your website</code>] &gt; <code>Site configuration</code> &gt; <code>Build &amp; deploy</code> &gt; <code>Continuous Deployment</code> &gt; <code>Branches and deploy contexts</code>↩︎</p></li>
</ol></section><section class="quarto-appendix-contents" id="quarto-citation"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{ryan2023,
  author = {Ryan, Jadey},
  title = {Intermediate Guide to Publish a {Quarto} Website with
    {GitHub} \&amp; {Netlify}},
  date = {2023-11-19},
  url = {https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-ryan2023" class="csl-entry quarto-appendix-citeas">
Ryan, Jadey. 2023. <span>“Intermediate Guide to Publish a Quarto Website
with GitHub &amp; Netlify.”</span> November 19, 2023. <a href="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/">https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Quarto</category>
  <category>GitHub</category>
  <category>Netlify</category>
  <guid>https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/</guid>
  <pubDate>Sat, 18 Nov 2023 23:00:00 GMT</pubDate>
  <media:content url="https://jadeyryan.com/blog/2023-11-19_publish-quarto-website/thumbnail.webp" medium="image" type="image/webp"/>
</item>
</channel>
</rss>
